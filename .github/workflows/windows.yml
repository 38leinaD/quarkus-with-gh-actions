# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Windows Build

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: DeLaGuardo/setup-graalvm@3
      with:
#        graalvm-version: '19.3.1.java11'
         graalvm-version: '20.0.0.java11'
    - name: install native-image
      run: |
        %JAVA_HOME%/bin/gu.cmd install native-image
      shell: cmd
    - name: version
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio"
    - name: list it
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019"
    - name: list it1
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
    - name: list it2
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC"
    - name: list it3
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary"
    - name: testit
      run: dir "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build"
    - name: print page size
      run: wmic pagefile list /format:list
    - name: configure Pagefile
      uses: al-cheb/configure-pagefile-action@v1.2
    - name: Build Gradle
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
        gradlew build -x check -Dquarkus.package.type=native -Pversion="${{ github.event.release.tag_name }}"
      shell: cmd
    - name: list native
      run: dir build
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/quarkus-with-gh-actions-${{ github.event.release.tag_name }}-runner.exe
        asset_name: quarkus-with-gh-actions-${{ github.event.release.tag_name }}-runner.exe
        asset_label: win-64
        asset_content_type: application/octet-stream
